digraph {
	5 -> 6 [label=IS_AST_PARENT color=black]
	6 -> 7 [label=IS_AST_PARENT color=black]
	6 -> 8 [label=IS_AST_PARENT color=black]
	6 -> 9 [label=IS_AST_PARENT color=black]
	9 -> 10 [label=IS_AST_PARENT color=black]
	9 -> 11 [label=IS_AST_PARENT color=black]
	11 -> 12 [label=IS_AST_PARENT color=black]
	11 -> 14 [label=IS_AST_PARENT color=black]
	12 -> 13 [label=IS_AST_PARENT color=black]
	14 -> 15 [label=IS_AST_PARENT color=black]
	15 -> 16 [label=IS_AST_PARENT color=black]
	17 -> 18 [label=IS_AST_PARENT color=black]
	18 -> 19 [label=IS_AST_PARENT color=black]
	18 -> 20 [label=IS_AST_PARENT color=black]
	18 -> 21 [label=IS_AST_PARENT color=black]
	21 -> 22 [label=IS_AST_PARENT color=black]
	21 -> 23 [label=IS_AST_PARENT color=black]
	24 -> 25 [label=IS_AST_PARENT color=black]
	25 -> 26 [label=IS_AST_PARENT color=black]
	25 -> 27 [label=IS_AST_PARENT color=black]
	25 -> 28 [label=IS_AST_PARENT color=black]
	28 -> 29 [label=IS_AST_PARENT color=black]
	28 -> 30 [label=IS_AST_PARENT color=black]
	30 -> 31 [label=IS_AST_PARENT color=black]
	30 -> 33 [label=IS_AST_PARENT color=black]
	31 -> 32 [label=IS_AST_PARENT color=black]
	33 -> 34 [label=IS_AST_PARENT color=black]
	33 -> 36 [label=IS_AST_PARENT color=black]
	34 -> 35 [label=IS_AST_PARENT color=black]
	36 -> 37 [label=IS_AST_PARENT color=black]
	38 -> 39 [label=IS_AST_PARENT color=black]
	39 -> 40 [label=IS_AST_PARENT color=black]
	39 -> 41 [label=IS_AST_PARENT color=black]
	39 -> 42 [label=IS_AST_PARENT color=black]
	42 -> 43 [label=IS_AST_PARENT color=black]
	42 -> 44 [label=IS_AST_PARENT color=black]
	45 -> 46 [label=IS_AST_PARENT color=black]
	46 -> 47 [label=IS_AST_PARENT color=black]
	46 -> 48 [label=IS_AST_PARENT color=black]
	46 -> 49 [label=IS_AST_PARENT color=black]
	49 -> 50 [label=IS_AST_PARENT color=black]
	49 -> 51 [label=IS_AST_PARENT color=black]
	52 -> 53 [label=IS_AST_PARENT color=black]
	53 -> 54 [label=IS_AST_PARENT color=black]
	53 -> 55 [label=IS_AST_PARENT color=black]
	53 -> 56 [label=IS_AST_PARENT color=black]
	56 -> 57 [label=IS_AST_PARENT color=black]
	56 -> 58 [label=IS_AST_PARENT color=black]
	59 -> 60 [label=IS_AST_PARENT color=black]
	60 -> 61 [label=IS_AST_PARENT color=black]
	60 -> 62 [label=IS_AST_PARENT color=black]
	62 -> 63 [label=IS_AST_PARENT color=black]
	62 -> 65 [label=IS_AST_PARENT color=black]
	63 -> 64 [label=IS_AST_PARENT color=black]
	65 -> 66 [label=IS_AST_PARENT color=black]
	65 -> 68 [label=IS_AST_PARENT color=black]
	65 -> 72 [label=IS_AST_PARENT color=black]
	65 -> 74 [label=IS_AST_PARENT color=black]
	65 -> 78 [label=IS_AST_PARENT color=black]
	65 -> 82 [label=IS_AST_PARENT color=black]
	65 -> 86 [label=IS_AST_PARENT color=black]
	66 -> 67 [label=IS_AST_PARENT color=black]
	68 -> 69 [label=IS_AST_PARENT color=black]
	72 -> 73 [label=IS_AST_PARENT color=black]
	74 -> 75 [label=IS_AST_PARENT color=black]
	78 -> 79 [label=IS_AST_PARENT color=black]
	82 -> 83 [label=IS_AST_PARENT color=black]
	86 -> 87 [label=IS_AST_PARENT color=black]
	69 -> 70 [label=IS_AST_PARENT color=black]
	69 -> 71 [label=IS_AST_PARENT color=black]
	75 -> 76 [label=IS_AST_PARENT color=black]
	75 -> 77 [label=IS_AST_PARENT color=black]
	79 -> 80 [label=IS_AST_PARENT color=black]
	79 -> 81 [label=IS_AST_PARENT color=black]
	83 -> 84 [label=IS_AST_PARENT color=black]
	83 -> 85 [label=IS_AST_PARENT color=black]
	87 -> 88 [label=IS_AST_PARENT color=black]
	87 -> 89 [label=IS_AST_PARENT color=black]
	90 -> 91 [label=IS_AST_PARENT color=black]
	91 -> 92 [label=IS_AST_PARENT color=black]
	91 -> 94 [label=IS_AST_PARENT color=black]
	92 -> 93 [label=IS_AST_PARENT color=black]
	94 -> 95 [label=IS_AST_PARENT color=black]
	95 -> 96 [label=IS_AST_PARENT color=black]
	96 -> 97 [label=IS_AST_PARENT color=black]
	96 -> 98 [label=IS_AST_PARENT color=black]
	98 -> 99 [label=IS_AST_PARENT color=black]
	98 -> 102 [label=IS_AST_PARENT color=black]
	99 -> 100 [label=IS_AST_PARENT color=black]
	99 -> 101 [label=IS_AST_PARENT color=black]
	103 -> 104 [label=IS_AST_PARENT color=black]
	104 -> 105 [label=IS_AST_PARENT color=black]
	104 -> 107 [label=IS_AST_PARENT color=black]
	105 -> 106 [label=IS_AST_PARENT color=black]
	107 -> 108 [label=IS_AST_PARENT color=black]
	107 -> 110 [label=IS_AST_PARENT color=black]
	107 -> 112 [label=IS_AST_PARENT color=black]
	107 -> 116 [label=IS_AST_PARENT color=black]
	108 -> 109 [label=IS_AST_PARENT color=black]
	110 -> 111 [label=IS_AST_PARENT color=black]
	112 -> 113 [label=IS_AST_PARENT color=black]
	116 -> 117 [label=IS_AST_PARENT color=black]
	113 -> 114 [label=IS_AST_PARENT color=black]
	113 -> 115 [label=IS_AST_PARENT color=black]
	121 -> 122 [label=IS_AST_PARENT color=black]
	121 -> 123 [label=IS_AST_PARENT color=black]
	124 -> 125 [label=IS_AST_PARENT color=black]
	124 -> 126 [label=IS_AST_PARENT color=black]
	127 -> 128 [label=IS_AST_PARENT color=black]
	127 -> 129 [label=IS_AST_PARENT color=black]
	130 -> 131 [label=IS_AST_PARENT color=black]
	130 -> 132 [label=IS_AST_PARENT color=black]
	133 -> 134 [label=IS_AST_PARENT color=black]
	133 -> 135 [label=IS_AST_PARENT color=black]
	136 -> 121 [label=FLOWS_TO color=blue]
	121 -> 124 [label=FLOWS_TO color=blue]
	124 -> 127 [label=FLOWS_TO color=blue]
	127 -> 130 [label=FLOWS_TO color=blue]
	130 -> 133 [label=FLOWS_TO color=blue]
	133 -> 5 [label=FLOWS_TO color=blue]
	5 -> 17 [label=FLOWS_TO color=blue]
	17 -> 24 [label=FLOWS_TO color=blue]
	24 -> 38 [label=FLOWS_TO color=blue]
	38 -> 45 [label=FLOWS_TO color=blue]
	45 -> 52 [label=FLOWS_TO color=blue]
	52 -> 59 [label=FLOWS_TO color=blue]
	59 -> 90 [label=FLOWS_TO color=blue]
	90 -> 103 [label=FLOWS_TO color=blue]
	103 -> 137 [label=FLOWS_TO color=blue]
	122 -> 123 [label=NSC color=red]
	123 -> 125 [label=NSC color=red]
	125 -> 126 [label=NSC color=red]
	126 -> 128 [label=NSC color=red]
	128 -> 129 [label=NSC color=red]
	129 -> 131 [label=NSC color=red]
	131 -> 132 [label=NSC color=red]
	132 -> 134 [label=NSC color=red]
	134 -> 135 [label=NSC color=red]
	135 -> 7 [label=NSC color=red]
	7 -> 8 [label=NSC color=red]
	8 -> 10 [label=NSC color=red]
	10 -> 13 [label=NSC color=red]
	13 -> 16 [label=NSC color=red]
	16 -> 19 [label=NSC color=red]
	19 -> 20 [label=NSC color=red]
	20 -> 22 [label=NSC color=red]
	22 -> 23 [label=NSC color=red]
	23 -> 26 [label=NSC color=red]
	26 -> 27 [label=NSC color=red]
	27 -> 29 [label=NSC color=red]
	29 -> 32 [label=NSC color=red]
	32 -> 35 [label=NSC color=red]
	35 -> 37 [label=NSC color=red]
	37 -> 40 [label=NSC color=red]
	40 -> 41 [label=NSC color=red]
	41 -> 43 [label=NSC color=red]
	43 -> 44 [label=NSC color=red]
	44 -> 47 [label=NSC color=red]
	47 -> 48 [label=NSC color=red]
	48 -> 50 [label=NSC color=red]
	50 -> 51 [label=NSC color=red]
	51 -> 54 [label=NSC color=red]
	54 -> 55 [label=NSC color=red]
	55 -> 57 [label=NSC color=red]
	57 -> 58 [label=NSC color=red]
	58 -> 61 [label=NSC color=red]
	61 -> 64 [label=NSC color=red]
	64 -> 67 [label=NSC color=red]
	67 -> 70 [label=NSC color=red]
	70 -> 71 [label=NSC color=red]
	71 -> 73 [label=NSC color=red]
	73 -> 76 [label=NSC color=red]
	76 -> 77 [label=NSC color=red]
	77 -> 80 [label=NSC color=red]
	80 -> 81 [label=NSC color=red]
	81 -> 84 [label=NSC color=red]
	84 -> 85 [label=NSC color=red]
	85 -> 88 [label=NSC color=red]
	88 -> 89 [label=NSC color=red]
	89 -> 93 [label=NSC color=red]
	93 -> 97 [label=NSC color=red]
	97 -> 100 [label=NSC color=red]
	100 -> 101 [label=NSC color=red]
	101 -> 102 [label=NSC color=red]
	102 -> 106 [label=NSC color=red]
	106 -> 109 [label=NSC color=red]
	109 -> 111 [label=NSC color=red]
	111 -> 114 [label=NSC color=red]
	114 -> 115 [label=NSC color=red]
	115 -> 117 [label=NSC color=red]
	137 [label="137
EXIT
CFGExitNode"]
	25 [label="25
\"* addr = qdev_get_prop_ptr ( dev , prop )\"
IdentifierDecl"]
	117 [label="117
errp
Identifier"]
	36 [label="36
prop
Argument"]
	90 [label="90
assert ( rc == sizeof ( buffer ) - 1 )
ExpressionStatement"]
	112 [label="112
& p
Argument"]
	95 [label="95
rc == sizeof ( buffer ) - 1
Argument"]
	37 [label="37
prop
Identifier"]
	28 [label="28
\"* addr = qdev_get_prop_ptr ( dev , prop )\"
AssignmentExpression"]
	40 [label="40
char [ ]
IdentifierDeclType"]
	46 [label="46
* p = buffer
IdentifierDecl"]
	96 [label="96
rc == sizeof ( buffer ) - 1
EqualityExpression"]
	99 [label="99
sizeof ( buffer )
SizeofExpression"]
	136 [label="136
ENTRY
CFGEntryNode"]
	38 [label="38
\"char buffer [ ] = \"\"xxxx:xx:xx.x\"\" ;\"
IdentifierDeclStatement"]
	76 [label="76
addr
Identifier"]
	121 [label="121
Object * obj
Parameter"]
	81 [label="81
bus
Identifier"]
	67 [label="67
buffer
Identifier"]
	84 [label="84
addr
Identifier"]
	93 [label="93
assert
Identifier"]
	61 [label="61
rc
Identifier"]
	58 [label="58
0
PrimaryExpression"]
	124 [label="124
Visitor * v
Parameter"]
	49 [label="49
* p = buffer
AssignmentExpression"]
	123 [label="123
obj
Identifier"]
	127 [label="127
const char * name
Parameter"]
	108 [label="108
v
Argument"]
	12 [label="12
DEVICE
Callee"]
	48 [label="48
p
Identifier"]
	78 [label="78
addr -> bus
Argument"]
	89 [label="89
function
Identifier"]
	134 [label="134
Error * *
ParameterType"]
	79 [label="79
addr -> bus
PtrMemberAccess"]
	23 [label="23
opaque
Identifier"]
	34 [label="34
dev
Argument"]
	72 [label="72
\"\"\"%04x:%02x:%02x.%d\"\"\"
Argument"]
	20 [label="20
prop
Identifier"]
	26 [label="26
PCIHostDeviceAddress *
IdentifierDeclType"]
	57 [label="57
rc
Identifier"]
	68 [label="68
sizeof ( buffer )
Argument"]
	109 [label="109
v
Identifier"]
	133 [label="133
Error * * errp
Parameter"]
	15 [label="15
obj
Argument"]
	16 [label="16
obj
Identifier"]
	60 [label="60
\"rc = snprintf ( buffer , sizeof ( buffer ) , \"\"%04x:%02x:%02x.%d\"\" , addr -> domain , addr -> bus , addr -> slot , addr -> function )\"
AssignmentExpression"]
	92 [label="92
assert
Callee"]
	106 [label="106
visit_type_str
Identifier"]
	74 [label="74
addr -> domain
Argument"]
	71 [label="71
buffer
SizeofOperand"]
	47 [label="47
char *
IdentifierDeclType"]
	77 [label="77
domain
Identifier"]
	33 [label="33
dev
ArgumentList"]
	51 [label="51
buffer
Identifier"]
	32 [label="32
qdev_get_prop_ptr
Identifier"]
	8 [label="8
dev
Identifier"]
	39 [label="39
\"buffer [ ] = \"\"xxxx:xx:xx.x\"\"\"
IdentifierDecl"]
	11 [label="11
DEVICE ( obj )
CallExpression"]
	129 [label="129
name
Identifier"]
	18 [label="18
* prop = opaque
IdentifierDecl"]
	110 [label="110
name
Argument"]
	45 [label="45
char * p = buffer ;
IdentifierDeclStatement"]
	116 [label="116
errp
Argument"]
	73 [label="73
\"\"\"%04x:%02x:%02x.%d\"\"\"
PrimaryExpression"]
	131 [label="131
void *
ParameterType"]
	122 [label="122
Object *
ParameterType"]
	42 [label="42
\"buffer [ ] = \"\"xxxx:xx:xx.x\"\"\"
AssignmentExpression"]
	97 [label="97
rc
Identifier"]
	29 [label="29
addr
Identifier"]
	69 [label="69
sizeof ( buffer )
SizeofExpression"]
	88 [label="88
addr
Identifier"]
	17 [label="17
Property * prop = opaque ;
IdentifierDeclStatement"]
	130 [label="130
void * opaque
Parameter"]
	10 [label="10
dev
Identifier"]
	80 [label="80
addr
Identifier"]
	65 [label="65
buffer
ArgumentList"]
	66 [label="66
buffer
Argument"]
	101 [label="101
buffer
SizeofOperand"]
	52 [label="52
int rc = 0 ;
IdentifierDeclStatement"]
	41 [label="41
buffer
Identifier"]
	82 [label="82
addr -> slot
Argument"]
	135 [label="135
errp
Identifier"]
	63 [label="63
snprintf
Callee"]
	6 [label="6
* dev = DEVICE ( obj )
IdentifierDecl"]
	83 [label="83
addr -> slot
PtrMemberAccess"]
	64 [label="64
snprintf
Identifier"]
	103 [label="103
\"visit_type_str ( v , name , & p , errp )\"
ExpressionStatement"]
	56 [label="56
rc = 0
AssignmentExpression"]
	128 [label="128
const char *
ParameterType"]
	115 [label="115
p
Identifier"]
	100 [label="100
sizeof
Sizeof"]
	98 [label="98
sizeof ( buffer ) - 1
AdditiveExpression"]
	126 [label="126
v
Identifier"]
	87 [label="87
addr -> function
PtrMemberAccess"]
	55 [label="55
rc
Identifier"]
	31 [label="31
qdev_get_prop_ptr
Callee"]
	105 [label="105
visit_type_str
Callee"]
	9 [label="9
* dev = DEVICE ( obj )
AssignmentExpression"]
	85 [label="85
slot
Identifier"]
	22 [label="22
opaque
Identifier"]
	59 [label="59
\"rc = snprintf ( buffer , sizeof ( buffer ) , \"\"%04x:%02x:%02x.%d\"\" , addr -> domain , addr -> bus , addr -> slot , addr -> function )\"
ExpressionStatement"]
	19 [label="19
Property *
IdentifierDeclType"]
	111 [label="111
name
Identifier"]
	14 [label="14
obj
ArgumentList"]
	21 [label="21
* prop = opaque
AssignmentExpression"]
	53 [label="53
rc = 0
IdentifierDecl"]
	94 [label="94
rc == sizeof ( buffer ) - 1
ArgumentList"]
	43 [label="43
buffer
Identifier"]
	104 [label="104
\"visit_type_str ( v , name , & p , errp )\"
CallExpression"]
	44 [label="44
\"\"\"xxxx:xx:xx.x\"\"\"
PrimaryExpression"]
	7 [label="7
DeviceState *
IdentifierDeclType"]
	107 [label="107
v
ArgumentList"]
	13 [label="13
DEVICE
Identifier"]
	27 [label="27
addr
Identifier"]
	54 [label="54
int
IdentifierDeclType"]
	75 [label="75
addr -> domain
PtrMemberAccess"]
	24 [label="24
\"PCIHostDeviceAddress * addr = qdev_get_prop_ptr ( dev , prop ) ;\"
IdentifierDeclStatement"]
	132 [label="132
opaque
Identifier"]
	35 [label="35
dev
Identifier"]
	125 [label="125
Visitor *
ParameterType"]
	91 [label="91
assert ( rc == sizeof ( buffer ) - 1 )
CallExpression"]
	113 [label="113
& p
UnaryOperationExpression"]
	114 [label="114
&
UnaryOperator"]
	5 [label="5
DeviceState * dev = DEVICE ( obj ) ;
IdentifierDeclStatement"]
	50 [label="50
buffer
Identifier"]
	70 [label="70
sizeof
Sizeof"]
	102 [label="102
1
PrimaryExpression"]
	86 [label="86
addr -> function
Argument"]
	62 [label="62
\"snprintf ( buffer , sizeof ( buffer ) , \"\"%04x:%02x:%02x.%d\"\" , addr -> domain , addr -> bus , addr -> slot , addr -> function )\"
CallExpression"]
	30 [label="30
\"qdev_get_prop_ptr ( dev , prop )\"
CallExpression"]
}
